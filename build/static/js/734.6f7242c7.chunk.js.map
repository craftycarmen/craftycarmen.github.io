{"version":3,"file":"static/js/734.6f7242c7.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n\n    const handleClick = () => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" })\n    }\n    return (\n        <Box\n            transition=\"all 0.2s ease-in-out\"\n            _hover={{ cursor: \"pointer\", color: \"primary.600\" }}\n            onClick={handleClick}\n        >\n            <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"800\" lineHeight=\"1\" fontFamily=\"Outfit\" mb={{ base: 0, md: -2 }} color=\"accent.300\">\n                {variant}\n            </Text>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\nimport { bgDark, bgLight } from \"theme\";\n\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(bgDark, bgLight);\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color=\"yellow.300\"\n                fontSize=\"lg\"\n                _hover={{ bg: \"transparent\" }}\n                // _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId, ProjectsPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n// import { bgDark, bgLight } from \"theme\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    // const navItemColor = useColorModeValue(bgLight, bgDark);\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                // color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === ProjectsPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(ProjectsPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                // color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color=\"primary.500\"\n                                onClick={onResumeOpen}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Resume\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll, ProjectsPageId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"secondary.400\", \"secondary.400\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\"\n                data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\"\n            >\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType\n\n                        text={configs.common.logoType}\n\n                    />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === ProjectsPageId ? \"secondary.400\" : \"transparent\"}\n                                onClick={() => toSection(ProjectsPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                            >\n                                What I've Built\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"secondary.400\"\n                                onClick={() => toSection(AboutPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                            >\n                                The Road So Far\n                            </Button>\n                            <Tooltip\n                                key=\"Resume\"\n                                label=\"Download Resume\"\n                                textTransform=\"capitalize\"\n                                bg=\"highlight.200\"\n                                color=\"primary.400\"\n                            >\n                                <Button\n                                    // variant=\"link\" \n                                    onClick={onResumeOpen} data-aos=\"fade\" data-aos-delay=\"400\"\n                                    color=\"gray.400\"\n                                    backgroundColor=\"secondary.400\"\n                                    _hover={{ bg: `secondary.400` }}\n                                >\n                                    Resume\n                                </Button>\n                            </Tooltip>\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip, useTheme } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedIn: <LinkedInIcon />,\n    gitHub: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    email: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n    color?: string;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800, color }) => {\n    const theme = useTheme();\n\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Tooltip\n                    key=\"Resume\"\n                    label=\"Download Resume\"\n                    textTransform=\"capitalize\"\n                    bg={theme.colors.highlight[200]}\n                    color={theme.colors.primary[400]}\n                >\n                    <Button\n                        data-aos=\"fade\"\n                        data-aos-delay={delay} size=\"lg\"\n                        borderRadius=\"md\"\n                        mr=\"2\"\n                        onClick={onResumeOpen}\n                        bg={theme.colors.secondary[300]}\n                        color={color || theme.colors.gray[200]}\n                        _hover={{ bg: theme.colors.secondary[300] }}\n                    >\n                        Check Out My Resume\n                    </Button>\n                </Tooltip>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip\n                            key={social.type}\n                            label={social.type}\n                            textTransform=\"capitalize\"\n                            bg={theme.colors.highlight[200]}\n                            color={theme.colors.primary[400]}\n                        >\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                                color={color || theme.colors.secondary[400]}\n                                _hover={{ color: theme.colors.secondary[400], bg: \"transparent\" }}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack >\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["MarkdownFile","configs","common","landing","featuredProjects","otherProjects","about","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","useState","data","setData","useEffect","fetch","then","res","text","LogoType","variant","useBreakpointValue","base","mobile","md","desktop","transition","_hover","cursor","color","onClick","window","scrollTo","top","behavior","fontSize","fontWeight","lineHeight","fontFamily","mb","ColorModeButton","props","useColorModeValue","bgDark","bgLight","useColorMode","colorMode","toggleColorMode","bg","icon","size","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","as","IconButton","ref","px","placement","autoFocus","justifyContent","position","right","spacing","my","textDecoration","textDecorationThickness","textDecorationColor","ProjectsPageId","setTimeout","AboutPageId","onResumeOpen","mt","Socials","delay","resume","Navbar","navItemColor","useScroll","toSection","section","document","getElementById","scrollIntoView","left","transform","zIndex","py","alignItems","display","mr","label","textTransform","backgroundColor","LinksToIconMapper","linkedIn","gitHub","facebook","instagram","youtube","email","exclude","theme","useTheme","colors","highlight","primary","borderRadius","secondary","gray","social","idx","includes","type","p","open","link","onMailTo"],"sourceRoot":""}