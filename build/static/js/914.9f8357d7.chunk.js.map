{"version":3,"file":"static/js/914.9f8357d7.chunk.js","mappings":"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","sources":["pages/landing/Landing.tsx","shared/content/Content.tsx","shared/socials/Socials.tsx","utils/Functions.ts","../node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Center, Container, Heading, Image, HStack, Stack, Flex, Box, IconButton, Button, Text } from \"@chakra-ui/react\";\n\nimport { Content, configs, useContent, MarkdownFile } from \"shared/content/Content\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { ProjectsPageId } from \"utils/useScroll\";\nimport { ChevronDownIcon } from \"utils/Icons\";\nimport { marked } from \"marked\";\n\nexport const Landing: FC = () => {\n    const content = useContent(MarkdownFile.Landing);\n    const [parsedContent, setParsedContent] = useState<string>(\"\");\n\n    // Use useEffect to parse the markdown once content is available\n    useEffect(() => {\n        const parseContent = async () => {\n            if (content.landing) {\n                const parsed = await marked(content.landing); // Ensure parsing is awaited\n                setParsedContent(parsed);\n            }\n        };\n\n        parseContent(); // Call the async function to parse content\n    }, [content.landing]);\n\n    const scrollIntoView = () => {\n        const featuredHeader = document.getElementById(ProjectsPageId);\n\n        if (featuredHeader) {\n            featuredHeader.scrollIntoView({ behavior: \"smooth\" });\n        }\n    };\n\n    return (\n        <Box id=\"page-landing\">\n            <Center pb={{ base: 16, md: 32 }}>\n                <HStack justifyContent=\"flex-end\" alignItems=\"flex-start\" spacing={{ base: 8, md: 16 }}>\n                    <Stack flex=\"1\">\n                        <Stack spacing=\"8\">\n                            <Heading\n                                fontSize={{ base: \"5xl\", md: \"7xl\" }}\n                                lineHeight=\"1\"\n                                color=\"accent.300\"\n                                data-aos=\"fade-down\"\n                                data-aos-delay=\"400\"\n                            >\n                                {configs.landing.headline}\n                                <span className=\"waving-hand\">üëãüèª</span>\n                                <br />\n                                {configs.landing.subheadline}\n                            </Heading>\n                            {parsedContent && (\n                                <Text fontSize=\"lg\">\n                                    <Box\n                                        as=\"div\"\n                                        dangerouslySetInnerHTML={{ __html: parsedContent }}\n                                    />\n                                </Text>\n                            )}\n                            <style>\n                                {`\n                                    #page-landing p {\n                                        margin-bottom: 1.5rem;\n                                    }\n\n                                    #page-landing strong {\n                                        font-weight: bold;\n                                        background-color: #d5dcf9;\n                                        color: #293132;\n                                    }\n                                `}\n                            </style>\n                        </Stack>\n                        <Socials delay={1000} />\n                    </Stack>\n                    <Container\n                        // flex=\"0.4\"\n                        // display={{ base: \"none\", lg: \"block\" }}\n                        maxWidth={{ base: \"40%\", md: \"30%\" }}\n                        display=\"inline-block\"\n                        data-aos=\"fade-up\"\n                        data-aos-delay=\"400\"\n                    >\n                        <Box position=\"relative\" display=\"inline-block\">\n                            <Box\n                                position=\"absolute\"\n                                top=\"5px\"\n                                left=\"5px\"\n                                width=\"100%\"\n                                height=\"100%\"\n                                border=\"2px solid #ff686b\"\n                                borderRadius=\"6px\"\n                                boxSizing=\"border-box\"\n                                zIndex={1}\n                            />\n                            <picture>\n                                <source type=\"image/webp\" src={configs.landing.picture}></source>\n                                <source type=\"image/jpeg\" src={configs.landing.jpg}></source>\n                                <Image\n                                    borderRadius=\"md\"\n                                    src={configs.landing.jpg}\n                                    alt={`Carmen Shiu`}\n                                    boxShadow=\"9px 9px 0px rgba(213, 220, 249, 1)\"\n                                />\n                            </picture>\n                        </Box>\n                    </Container>\n                </HStack>\n            </Center>\n            <Flex justifyContent=\"center\" data-aos=\"fade\" data-aos-delay=\"1400\">\n                <Button\n                    as={IconButton}\n                    fontSize=\"3xl\"\n                    variant=\"icon\"\n                    aria-label=\"down arrow button\"\n                    icon={<ChevronDownIcon />}\n                    color=\"yellow.300\"\n                    onClick={scrollIntoView}\n                >\n                </Button>\n            </Flex>\n        </Box>\n    );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‚Ä£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip, useTheme } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedIn: <LinkedInIcon />,\n    gitHub: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    email: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n    color?: string;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800, color }) => {\n    const theme = useTheme();\n\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Tooltip\n                    key=\"Resume\"\n                    label=\"Download Resume\"\n                    textTransform=\"capitalize\"\n                    bg={theme.colors.highlight[200]}\n                    color={theme.colors.primary[400]}\n                >\n                    <Button\n                        data-aos=\"fade\"\n                        data-aos-delay={delay} size=\"lg\"\n                        borderRadius=\"md\"\n                        mr=\"2\"\n                        onClick={onResumeOpen}\n                        bg={theme.colors.secondary[300]}\n                        color={color || theme.colors.gray[200]}\n                        _hover={{ bg: theme.colors.secondary[300] }}\n                    >\n                        Check Out My Resume\n                    </Button>\n                </Tooltip>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip\n                            key={social.type}\n                            label={social.type}\n                            textTransform=\"capitalize\"\n                            bg={theme.colors.highlight[200]}\n                            color={theme.colors.primary[400]}\n                        >\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                                color={color || theme.colors.secondary[400]}\n                                _hover={{ color: theme.colors.secondary[400], bg: \"transparent\" }}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack >\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };\n"],"names":["Landing","content","useContent","MarkdownFile","useState","parsedContent","setParsedContent","useEffect","parseContent","landing","marked","parsed","id","pb","base","md","justifyContent","alignItems","spacing","flex","fontSize","lineHeight","color","configs","className","as","dangerouslySetInnerHTML","__html","delay","maxWidth","display","position","top","left","width","height","border","borderRadius","boxSizing","zIndex","type","src","alt","boxShadow","IconButton","variant","icon","onClick","featuredHeader","document","getElementById","ProjectsPageId","scrollIntoView","behavior","common","featuredProjects","otherProjects","about","Mapper","LandingMd","About","AboutMd","fileName","data","setData","fetch","then","res","text","LinksToIconMapper","linkedIn","gitHub","facebook","instagram","youtube","email","Socials","resume","exclude","theme","useTheme","label","textTransform","bg","colors","highlight","primary","size","mr","onResumeOpen","secondary","gray","_hover","social","idx","includes","p","open","link","window","onMailTo","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","React","props","ref","htmlWidth","htmlHeight","rest","Image$1","forwardRef","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","setStatus","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","shared","objectFit","objectPosition","omit","chakra","__DEV__","displayName"],"sourceRoot":""}