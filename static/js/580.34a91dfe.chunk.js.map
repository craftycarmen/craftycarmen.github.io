{"version":3,"file":"static/js/580.34a91dfe.chunk.js","mappings":"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","sources":["pages/other-projects/other-project-card/OtherProjectCard.tsx","pages/other-projects/OtherProjects.tsx","shared/content/Content.tsx","shared/project-card-footer/ProjectCardFooter.tsx","shared/tags/Tags.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Image, Box, Flex, Heading, Text } from \"@chakra-ui/react\";\n\nimport { Tags } from \"shared/tags/Tags\";\nimport { ProjectCardFooter } from \"shared/project-card-footer/ProjectCardFooter\";\n\ninterface Props {\n    id: string;\n    title: string;\n    demo?: string;\n    github?: string;\n    tags: string[];\n    description: string;\n    highlights?: string[];\n    image: string;\n    jpg: string;\n}\n\nexport const OtherProjectCard: FC<Props> = ({ id, title, demo, github, tags, description, highlights, image, jpg }) => {\n    return (\n        <Flex\n            alignItems={{ base: \"flex-start\", lg: \"center\" }}\n            gap=\"10\"\n            id={`other-project-card-${id}`}\n            py={{ base: \"8\", md: \"8\" }}\n        >\n            <Box flex=\"0.25\" display={{ base: \"none\", md: \"block\" }} data-aos=\"fade-up\" data-aos-offset=\"200\">\n                <picture>\n                    <source type=\"image/webp\" srcSet={image}></source>\n                    <source type=\"image/jpeg\" srcSet={jpg}></source>\n                    <Image ignoreFallback src={image} borderRadius=\"xl\" alt={`${title}-cover-image`} />\n                </picture>\n            </Box>\n            <Flex w=\"100%\" direction=\"column\" alignContent=\"center\" flex={1}>\n                <Box>\n                    <Heading fontSize=\"2xl\" data-aos=\"fade-down\" data-aos-offset=\"200\">\n                        {title}\n                    </Heading>\n                    <Text py=\"2\" data-aos=\"fade\" data-aos-delay=\"200\" data-aos-offset=\"200\">\n                        {description}\n                    </Text>\n                    <Tags tags={tags} id={id} size=\"xs\" />\n                </Box>\n                <ProjectCardFooter highlights={highlights} github={github} demo={demo} />\n            </Flex>\n        </Flex>\n    );\n};\n","import { FC, useState } from \"react\";\n\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\nimport { configs } from \"shared/content/Content\";\nimport { OtherProjectCard } from \"pages/other-projects/other-project-card/OtherProjectCard\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"utils/Icons\";\n\nconst initialCount = 3;\nconst incrementor = 3;\n\nexport const OtherProjects: FC = () => {\n    const [count, setCount] = useState<number>(initialCount);\n\n    const scrollToElement = (idx: number) => {\n        const elementTop = document\n            .getElementById(`other-project-card-${configs.otherProjects[idx].id}`)\n            ?.getBoundingClientRect().top;\n\n        if (elementTop) {\n            window.scrollTo({ top: elementTop + window.scrollY - 64, behavior: \"smooth\" });\n        }\n    };\n\n    const onShowMore = () => {\n        const oldCount = count;\n        setCount(count + incrementor);\n        setTimeout(() => {\n            scrollToElement(oldCount);\n        }, 1);\n    };\n\n    const onShowLess = () => {\n        setCount(initialCount);\n        scrollToElement(initialCount);\n    };\n\n    return (\n        <Box>\n            {configs.otherProjects.map((project, idx) => (\n                <div key={project.id}>{idx < count && <OtherProjectCard key={project.id} {...project} />}</div>\n            ))}\n            <Flex justifyContent=\"center\" py=\"8\" display={configs.otherProjects.length > 3 ? \"flex\" : \"none\"}>\n                {count < configs.otherProjects.length ? (\n                    <Button rightIcon={<ChevronDownIcon />} variant=\"link\" onClick={onShowMore}>\n                        Show More\n                    </Button>\n                ) : (\n                    <Button rightIcon={<ChevronUpIcon />} variant=\"link\" onClick={onShowLess}>\n                        Show Less\n                    </Button>\n                )}\n            </Flex>\n        </Box>\n    );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC, useState } from \"react\";\n\nimport { Button, Flex, IconButton, useBreakpointValue, Tooltip, UnorderedList, Text, Box, Accordion, AccordionItem, AccordionButton, AccordionPanel } from \"@chakra-ui/react\";\n\nimport { ArrowRightIcon, GitHubIcon, LinkIcon } from \"utils/Icons\";\nimport { open } from \"utils/Functions\";\n\ninterface GitHubButtonProps {\n    github?: string;\n    display?: any;\n}\n\ninterface HighlightsProps {\n    highlights?: string[];\n}\n\ninterface LiveDemoProps {\n    demo?: string;\n    display?: any;\n}\n\ninterface Props extends GitHubButtonProps, HighlightsProps, LiveDemoProps { }\n\nexport const Highlights: FC<HighlightsProps> = ({ highlights }) => {\n\n    return highlights ? (\n        <Accordion allowToggle>\n            <AccordionItem border=\"none\"\n                pb=\"4\"\n            >\n                {({ isExpanded }) => (\n                    <>\n                        <AccordionButton\n                            as={Button}\n                            variant=\"link\"\n                            color=\"secondary.400\"\n                            _hover={{ bg: \"transparent\" }}\n                            overflow=\"hidden\"\n                            p=\"0\"\n                            justifyContent=\"flex-start\"\n                            width=\"fit-content\"\n                        >\n                            {isExpanded ? \"Hide Highlights\" : \"See Highlights\"}\n                        </AccordionButton>\n\n                        <AccordionPanel>\n                            <UnorderedList listStylePosition=\"outside\" pl=\"1\">\n                                {highlights.map((highlight, idx) => (\n                                    <Text as=\"li\" key={idx}>{highlight}</Text>\n                                ))}\n                            </UnorderedList>\n                        </AccordionPanel>\n                    </>\n                )}\n            </AccordionItem>\n        </Accordion>\n    ) : null;\n};\n\nexport const GitHubButton: FC<GitHubButtonProps> = ({ github, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return github ? (\n        <Tooltip\n            key=\"GitHub\"\n            label=\"View Code\"\n            textTransform=\"capitalize\"\n            bg=\"highlight.200\"\n            color=\"primary.400\"\n        >\n            <Button\n                data-aos=\"fade\"\n                data-aos-delay=\"400\"\n                as={as}\n                variant=\"secondary\"\n                py=\"5\"\n                display={display}\n                leftIcon={<GitHubIcon />}\n                icon={<GitHubIcon />}\n                onClick={() => open(github)}\n                bg=\"secondary.300\"\n                color=\"gray.200\"\n                _hover={{ bg: `secondary.300` }}\n                border=\"2px solid highlight.300\"\n                boxShadow=\"2px 2px 0px rgba(251, 170, 41, 1)\"\n            >\n                GitHub\n            </Button>\n        </Tooltip>\n    ) : null;\n};\n\nexport const LiveDemo: FC<LiveDemoProps> = ({ demo, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return demo ? (\n        <Tooltip\n            key=\"Live\"\n            label=\"View Live Site\"\n            textTransform=\"capitalize\"\n            bg=\"highlight.200\"\n            color=\"primary.400\"\n        >\n            <Button\n                data-aos=\"fade\"\n                data-aos-delay=\"200\"\n                as={as}\n                display={display}\n                leftIcon={<LinkIcon fontSize=\"14pt\" />}\n                icon={<LinkIcon fontSize=\"14pt\" />}\n                onClick={() => open(demo)}\n                bg=\"secondary.300\"\n                color=\"gray.200\"\n                _hover={{ bg: `secondary.300` }}\n                border=\"2px solid highlight.300\"\n                boxShadow=\"2px 2px 0px rgba(251, 170, 41, 1)\"\n            >\n                Live\n            </Button>\n        </Tooltip>\n    ) : null;\n};\n\nexport const ProjectCardFooter: FC<Props> = ({ highlights, github, demo }) => {\n    return (\n        <Flex justifyContent={highlights ? \"space-between\" : \"flex-end\"} alignItems=\"center\" pt=\"8\">\n            <Highlights highlights={highlights} />\n            <Flex gap=\"4\" justifyContent=\"space-between\" alignItems=\"center\" display={demo || github ? \"flex\" : \"none\"}>\n                <LiveDemo demo={demo} />\n                <GitHubButton github={github} />\n            </Flex >\n        </Flex >\n    );\n};\n","import { FC } from \"react\";\n\nimport { Flex, Box, Badge } from \"@chakra-ui/react\";\n\ninterface Props {\n    id: string;\n    tags: Array<string>;\n    size?: string;\n    delay?: number;\n}\n\nexport const Tags: FC<Props> = ({ id, tags, size = \"sm\" }) => {\n    return (\n        <Flex py=\"2\" wrap=\"wrap\" gap=\"4\">\n            {tags.map((tag, idx) => (\n                <Box data-aos=\"flip-left\" data-aos-delay={idx * 50} key={`${id}-tag-${tag}`}>\n                    <Badge\n                        transition=\"0.2s ease-in-out\"\n                        transitionProperty=\"background, color\"\n                        _hover={{ cursor: \"default\" }}\n                        textTransform=\"none\"\n                        background=\"highlight.200\"\n                        borderRadius=\"md\"\n                        px=\"8px\"\n                        py=\"4px\"\n                        fontSize={size}\n                        fontWeight=\"600\"\n                    >\n                        {tag}\n                    </Badge>\n                </Box>\n            ))}\n        </Flex>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["OtherProjectCard","id","title","demo","github","tags","description","highlights","image","jpg","alignItems","base","lg","gap","py","md","flex","display","type","srcSet","ignoreFallback","src","borderRadius","alt","w","direction","alignContent","fontSize","Tags","size","ProjectCardFooter","OtherProjects","useState","count","setCount","scrollToElement","idx","elementTop","document","getElementById","configs","getBoundingClientRect","top","window","scrollTo","scrollY","behavior","project","justifyContent","rightIcon","variant","onClick","oldCount","setTimeout","MarkdownFile","common","landing","featuredProjects","otherProjects","about","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","data","setData","useEffect","fetch","then","res","text","Highlights","allowToggle","border","pb","isExpanded","as","Button","color","_hover","bg","overflow","p","width","listStylePosition","pl","map","highlight","GitHubButton","useBreakpointValue","IconButton","label","textTransform","leftIcon","icon","open","boxShadow","LiveDemo","pt","wrap","tag","transition","transitionProperty","cursor","background","px","fontWeight","link","onResumeOpen","onMailTo"],"sourceRoot":""}